# -*- mode: ruby -*-
# vi: set ft=ruby :

# Copyright Bosch Software Innovations GmbH, 2016.
# Part of the SW360 Portal Project.
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html

# Usage:
#   prepare VM by building building it
#       using: `vagrant up`
#   run docker-compose inside of the VM by booting a built VM
#       using: `vagrant reload`
#          or: `vagrant up` after `vagrant halt`
#
# by default. this starts the tomcat together with nginx for HTTPS and stets the
# development settings

Vagrant.configure(2) do |config|
  config.vm.box = "ubuntu/trusty64"
  config.vm.provider "virtualbox" do |vb|
    vb.memory = 6000
    vb.cpus = 3
  end

  config.vm.provision "shell", inline: <<-SHELL
set -xe
type docker &> /dev/null || \
    curl -sSL https://get.docker.com/ | sh
usermod -a -G docker vagrant

type docker-compose &> /dev/null || \
    curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` > /usr/bin/docker-compose 2> /dev/null
chmod +x /usr/bin/docker-compose
SHELL

  if File.exists?(File.join(File.dirname(__FILE__),".vagrant/machines/default/virtualbox/action_provision"))
    # build and run with docker compose
    config.vm.provision "shell", run: "always", privileged: false, inline: <<-SHELL
set -xe
cd /vagrant

echo "build all images (with current configuration in ./contfiguration.env)"
./docker-compose.sh build

echo "start all containers (with current configuration in ./contfiguration.env and ./configuration.yml)"
./docker-compose.sh up -d
SHELL
  end

  config.vm.network "forwarded_port", guest: 5005, host: 5005
  config.vm.network "forwarded_port", guest: 5984, host: 5984
  config.vm.network "forwarded_port", guest: 5432, host: 5432
  config.vm.network "forwarded_port", guest: 8080, host: 8080
  config.vm.network "forwarded_port", guest: 8443, host: 8443
  config.vm.network "forwarded_port", guest: 9443, host: 9443
end
